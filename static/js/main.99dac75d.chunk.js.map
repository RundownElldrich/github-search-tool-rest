{"version":3,"sources":["api/usersApi.ts","utils/generateUsersSearchByLoginQuery.ts","utils/generateReposSearchByUserLoginQuery.ts","features/usersSearch/usersSearchSlice.ts","features/usersSearch/usersSearchSaga.ts","app/rootSaga.ts","app/store.ts","styles/global.ts","app/hooks.ts","styles/mediaQueries.ts","features/usersSearch/components/UsersSearchForm/styled.ts","features/usersSearch/components/UsersSearchForm/UsersSearchForm.tsx","features/usersSearch/components/RepoItem/styled.ts","features/usersSearch/components/RepoItem/RepoItem.tsx","common/components/Loader/styled.ts","common/components/Loader/Loader.tsx","features/usersSearch/components/UserItem/styled.ts","features/usersSearch/components/UserItem/UserItem.tsx","features/usersSearch/components/UsersSearch/styled.ts","features/usersSearch/components/UsersSearch/UsersSearch.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["baseUrl","usersApi","getUsers","filters","url","login","per_page","query","generateUsersSearchByLoginQuery","axios","get","getReposByUserLogin","generateReposSearchByUserLoginQuery","initialState","list","isLoadingUsers","searchParams","usersSearchSlice","createSlice","name","reducers","setSearchParams","state","action","payload","setIsLoadingUsers","resetSearchParams","getUsersSuccess","getUsersFailed","getUserRepos","getUserReposSuccess","repos","user","find","userInList","getUserReposFailed","selectSearchParams","usersSearch","selectUsersList","selectIsLoadingUsers","actions","reducer","fetchUsers","fetchUserRepos","searchUsersSaga","call","response","put","data","items","console","log","takeLatest","rootSaga","all","usersSearchSaga","sagaMiddleware","createSagaMiddleware","store","configureStore","usersSearchReducer","middleware","getDefaultMiddleware","serializableCheck","concat","logger","run","GlobalStyle","createGlobalStyle","useAppDispatch","useDispatch","useAppSelector","useSelector","breakpoints","sm","md","lg","xl","mediaQueries","key","style","Form","styled","form","Input","input","SubmitButton","props","disabled","Error","span","UsersSearchForm","dispatch","useForm","register","handleSubmit","errors","formState","required","onSubmitClick","onSubmit","placeholder","type","onChange","e","target","value","Wrapper","div","DetailsRow","NameLabel","p","Description","StarCounter","RepoItem","content","stargazers_count","description","html_url","as","href","rel","LoaderOverlay","LoaderMessage","Dots","Loader","message","LoginLabel","ArrowIcon","i","dir","UserItem","useState","showRepos","setShowRepos","isLoading","setIsLoading","onClick","map","repo","id","ResultsLabel","UsersSearch","usersList","setLogin","useEffect","length","App","Helmet","charSet","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.99dac75d.chunk.js","sourcesContent":["import axios from 'axios';\n\nimport {\n  IUserSearchParams,\n} from 'models/user';\nimport generateReposSearchByUserLoginQuery from 'utils/generateReposSearchByUserLoginQuery';\nimport generateUsersSearchByLoginQuery from 'utils/generateUsersSearchByLoginQuery';\n\nexport const baseUrl = 'https://api.github.com/search';\nexport const usersPath = '/users';\nexport const repositoriesPath = '/repositories';\n\nconst usersApi = {\n  getUsers(filters: IUserSearchParams) {\n    const url = `${baseUrl}${usersPath}${generateUsersSearchByLoginQuery(filters)}`;\n\n    return axios.get(url);\n  },\n  getReposByUserLogin(login: string) {\n    const url = `${baseUrl}${repositoriesPath}${generateReposSearchByUserLoginQuery(login)}`;\n\n    return axios.get(url);\n  },\n};\n\nexport default usersApi;\n","/* eslint-disable camelcase */\nimport { IUserSearchParams } from 'models/user';\n\nexport default function generateUsersSearchByLoginQuery(filters: IUserSearchParams) {\n  const { login, per_page = 10 } = filters;\n  let query = `?q=${login}+in:login`;\n\n  if (per_page) {\n    query += `&per_page=${per_page}`;\n  }\n\n  return query;\n}\n","export default function generateReposSearchByUserLoginQuery(login:string) {\n  return `?q=user:${login}`;\n}\n","import {\n  createSlice,\n  PayloadAction,\n} from '@reduxjs/toolkit';\n/* eslint-disable-next-line import/no-cycle */ // due to reduxjs/toolkit implementation https://stackoverflow.com/a/63924400\nimport { RootState } from 'app/store';\nimport {\n  IUser,\n  IUserSearchParams,\n} from 'models/user';\n\nexport interface IUsersState {\n  list: IUser[]\n  isLoadingUsers: boolean\n  searchParams: IUserSearchParams\n  error?: Error | string\n}\n\nexport const initialState: IUsersState = {\n  list: [],\n  isLoadingUsers: false,\n  searchParams: {\n    login: '',\n    per_page: 5,\n  },\n};\n\n/* eslint-disable no-param-reassign */ // due to reduxjs/toolkit implementation https://github.com/reduxjs/redux-toolkit/issues/360\nexport const usersSearchSlice = createSlice({\n  name: 'usersSearch',\n  initialState,\n  reducers: {\n    setSearchParams(state, action: PayloadAction<Partial<IUserSearchParams>>) {\n      state.searchParams = {\n        ...state.searchParams,\n        ...action.payload,\n      };\n    },\n    setIsLoadingUsers(state, action: PayloadAction<boolean>) {\n      state.isLoadingUsers = action.payload;\n    },\n    resetSearchParams(state) {\n      state.searchParams = initialState.searchParams;\n      state.list = [];\n    },\n    // eslint-disable-next-line no-unused-vars\n    getUsers(state, action) {\n      state.isLoadingUsers = true;\n    },\n    getUsersSuccess(state, action) {\n      state.isLoadingUsers = false;\n      state.list = action.payload;\n    },\n    getUsersFailed(state) {\n      state.isLoadingUsers = false;\n    },\n    // eslint-disable-next-line no-unused-vars\n    getUserRepos(state, action) {},\n    getUserReposSuccess(state, action) {\n      const {\n        login,\n        repos,\n      } = action.payload;\n      const user = state.list\n        .find((userInList) => userInList.login === login);\n\n      if (user) {\n        user.repos = repos;\n      }\n    },\n    getUserReposFailed() {},\n  },\n});\n\nexport const selectSearchParams = (state: RootState) => state.usersSearch.searchParams;\nexport const selectUsersList = (state: RootState) => state.usersSearch.list;\nexport const selectIsLoadingUsers = (state: RootState) => state.usersSearch.isLoadingUsers;\nexport const errorSelector = (state: RootState) => state.usersSearch.error;\n\nconst {\n  actions,\n  reducer,\n} = usersSearchSlice;\n\nexport const {\n  getUsers,\n  getUsersSuccess,\n  getUsersFailed,\n  getUserRepos,\n  getUserReposSuccess,\n  getUserReposFailed,\n  setIsLoadingUsers,\n  setSearchParams,\n  resetSearchParams,\n} = actions;\n\nexport default reducer;\n","/* eslint-disable import/no-cycle */ // due to reduxjs/toolkit implementation https://stackoverflow.com/a/63924400\nimport { PayloadAction } from '@reduxjs/toolkit';\nimport {\n  call,\n  put,\n  takeLatest,\n} from 'redux-saga/effects';\n\nimport usersApi from 'api/usersApi';\nimport { IRepo } from 'models/repo';\nimport {\n  IUserSearchParams,\n  IUsersList,\n} from 'models/user';\n\nimport {\n  getUserRepos,\n  getUserReposFailed,\n  getUserReposSuccess,\n  getUsers,\n  getUsersFailed,\n  getUsersSuccess,\n} from 'features/usersSearch/usersSearchSlice';\n\ninterface IResponse<T> {\n  data: {\n    items: T[]\n  }\n}\n\nexport function* fetchUsers(action: PayloadAction<IUserSearchParams>) {\n  try {\n    const response: IResponse<IUsersList> = yield call(usersApi.getUsers, action.payload);\n\n    yield put(getUsersSuccess(response.data.items));\n  } catch (error) {\n    // eslint-disable-next-line no-console\n    console.log('Failed to fetch users', error);\n\n    yield put(getUsersFailed);\n  }\n}\n\nexport function* fetchUserRepos(action: PayloadAction<string>) {\n  try {\n    const response: IResponse<IRepo> = yield call(usersApi.getReposByUserLogin, action.payload);\n\n    yield put(getUserReposSuccess({\n      login: action.payload,\n      repos: response.data.items,\n    }));\n  } catch (error) {\n    // eslint-disable-next-line no-console\n    console.log('Failed to fetch repos', error);\n\n    yield put(getUserReposFailed());\n  }\n}\n\nexport default function* searchUsersSaga() {\n  yield takeLatest(getUsers, fetchUsers);\n  yield takeLatest(getUserRepos, fetchUserRepos);\n}\n","/* eslint-disable import/no-cycle */ // due to reduxjs/toolkit implementation https://stackoverflow.com/a/63924400\nimport usersSearchSaga from 'features/usersSearch/usersSearchSaga';\nimport { all } from 'redux-saga/effects';\n\nexport default function* rootSaga() {\n  yield all([usersSearchSaga()]);\n}\n","import { configureStore } from '@reduxjs/toolkit';\nimport createSagaMiddleware from 'redux-saga';\nimport logger from 'redux-logger';\n\n/* eslint-disable import/no-cycle */ // due to reduxjs/toolkit implementation https://stackoverflow.com/a/63924400\nimport rootSaga from 'app/rootSaga';\nimport usersSearchReducer from 'features/usersSearch/usersSearchSlice';\n\nconst sagaMiddleware = createSagaMiddleware();\n\nexport const store = configureStore({\n  reducer: {\n    usersSearch: usersSearchReducer,\n  },\n  middleware: (getDefaultMiddleware) => getDefaultMiddleware({\n    serializableCheck: false,\n  }).concat(sagaMiddleware, logger),\n});\n\nsagaMiddleware.run(rootSaga);\n\nexport type RootState = ReturnType<typeof store.getState>\nexport type AppDispatch = typeof store.dispatch;\n","// import { createGlobalStyle, ThemeProvider } from 'styled-components';\nimport { createGlobalStyle } from 'styled-components';\n\nconst GlobalStyle = createGlobalStyle`\n*,\n*::before,\n*::after {\n  box-sizing: border-box;\n}\n\nhtml {\n  font-size: 10px;\n}\n\nbody,\nh1,\nh2,\nh3,\nh4,\np,\nul,\nol,\nli,\nfigure,\nfigcaption,\nblockquote,\ndl,\ndd {\n  margin: 0;\n}\n\nul[class],\nol[class] {\n  list-style: none;\n  padding: 0;\n}\n\nbody {\n  font-family: 'Arial', sans-serif;\n}\n\nimg {\n  display: block;\n  max-inline-size: 100%;\n}\n\np,\nh1,\nh2,\nh3,\nh4,\nh5,\nh6,\nli,\nfigcaption {\n  max-width: 60ch;\n}\n\ninput, select, textarea, button{\n  font-family: inherit;\n}\n\n`;\n\nexport default GlobalStyle;\n","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\nimport type { RootState, AppDispatch } from 'app/store';\n\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","export const breakpoints = {\n  sm: 480,\n  md: 760,\n  lg: 1200,\n  xl: 1920,\n};\n\nexport const mediaQueries = (\n  key: keyof typeof breakpoints,\n) => (\n  style: TemplateStringsArray | String,\n) => `@media (min-width: ${breakpoints[key]}px) { ${style} }`;\n","import styled from 'styled-components';\n\nimport { mediaQueries } from 'styles/mediaQueries';\n\nexport const Form = styled.form`\n  padding: 2.2rem 2.2rem 1.2rem 2.2rem;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  height: 14.2rem;\n\n  ${mediaQueries('sm')`background-color: yellow;`};\n  ${mediaQueries('md')`background-color: green;`};\n  ${mediaQueries('lg')`background-color: wheat;`};\n  ${mediaQueries('xl')`background-color: pink;`};\n`;\n\nexport const Input = styled.input`\n  padding: 1rem;\n  background-color: #F2F2F2;\n  border: 0.1rem solid #BFBFBF;\n  border-radius: 0.2rem;\n  font-size: 1.5rem;\n  letter-spacing: 0.03rem;\n\n  &::placeholder{\n    margin-left: 2rem;\n    color: #606060;\n  }\n`;\n\nexport const SubmitButton = styled.input`\n  padding: 1rem;\n  background-color: #2D9CDB;\n  border: 0.1rem solid #2D9CDB;\n  border-radius: 0.2rem;\n  font-size: 1.5rem;\n  letter-spacing: 0.03rem;\n  color: #fff;\n  cursor: pointer;\n  opacity: ${(props) => (props.disabled ? '0.5' : '1')};\n`;\n\nexport const Error = styled.span`\n  font-size: 1.2rem;\n  color: crimson;\n  letter-spacing: 0.03rem;\n`;\n","import { useForm } from 'react-hook-form';\n\nimport {\n  useAppDispatch,\n  useAppSelector,\n} from 'app/hooks';\nimport {\n  getUsers,\n  selectIsLoadingUsers,\n  selectSearchParams,\n  setSearchParams,\n} from 'features/usersSearch/usersSearchSlice';\n\nimport {\n  Error, Form, Input, SubmitButton,\n} from './styled';\n\ntype FormData = {\n  login: string;\n};\n\nexport default function UsersSearchForm() {\n  const dispatch = useAppDispatch();\n  const isLoadingUsers = useAppSelector(selectIsLoadingUsers);\n  const searchParams = useAppSelector(selectSearchParams);\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n  } = useForm<FormData>();\n  const login = register('login', { required: true });\n  const onSubmitClick = handleSubmit(() => dispatch(getUsers(searchParams)));\n\n  return (\n    <Form onSubmit={onSubmitClick} data-testid=\"form\">\n      <Input\n        data-testid=\"input\"\n        placeholder=\"Enter username\"\n        type=\"text\"\n          // eslint-disable-next-line react/jsx-props-no-spreading\n        {...login}\n        onChange={(e) => {\n          login.onChange(e);\n          dispatch(setSearchParams({ login: e.target.value }));\n        }}\n      />\n      {errors.login && <Error data-testid=\"error\">This field is required ☝️</Error>}\n      <SubmitButton\n        data-testid=\"submit\"\n        disabled={isLoadingUsers}\n        type=\"submit\"\n        value=\"Search\"\n      />\n    </Form>\n  );\n}\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin: 1rem 2.2rem 1rem 4rem;\n  padding: 0.8rem 0.6rem;\n  background-color: #D2D2D2;\n  border: 0.2rem solid #D2D2D2;\n  border-radius: 0.2rem;\n  font-size: 1.5rem;\n`;\n\nexport const DetailsRow = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin-bottom: 0.2rem;\n`;\n\nexport const NameLabel = styled.p`\n  font-size: 1.6rem;\n  letter-spacing: 0.03rem;\n  font-weight: bold;\n  color: black;\n  text-decoration: none;\n  word-wrap: break-word;\n  max-width: 85%;\n`;\n\nexport const Description = styled.p`\n  font-size: 1.5rem;\n  letter-spacing: 0.03rem;\n`;\n\nexport const StarCounter = styled.p`\n  font-size: 1.5rem;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 15%;\n\n  &::after {\n    content: \"\\u2B50\";\n  }\n`;\n","import { IRepo } from 'models/repo';\n\nimport {\n  Wrapper,\n  DetailsRow,\n  NameLabel,\n  Description,\n  StarCounter,\n} from './styled';\n\ninterface IRepoItemProps {\n  content: IRepo\n}\n\n/* eslint-disable camelcase */\nexport default function RepoItem({ content }: IRepoItemProps) {\n  const {\n    name,\n    stargazers_count,\n    description,\n    html_url,\n  } = content;\n  return (\n    <Wrapper>\n      <DetailsRow>\n        <NameLabel\n          as=\"a\"\n          href={html_url}\n          rel=\"noreferrer\"\n          target=\"_blank\"\n        >\n          {name}\n\n        </NameLabel>\n        <StarCounter>\n          {stargazers_count}\n          &nbsp;\n        </StarCounter>\n      </DetailsRow>\n      <Description>{description}</Description>\n    </Wrapper>\n  );\n}\n","import styled from 'styled-components';\n\nexport const LoaderOverlay = styled.div`\n  height: 100vh;\n  width: 100vw;\n  position: fixed;\n  top: 0;\n  left: 0;\n  z-index: 999;\n  background-color: #2D9CDB40;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  pointer-events: none;\n`;\n\nexport const LoaderMessage = styled.span`\n  width: max-content;\n  padding: 2.2rem 3.2rem;\n  background: #fff;\n  font-size: 2.2rem;\n  border: 0.4rem solid #2D9CDB;\n  border-radius: 0.4rem;\n  display: flex;\n  align-items: center;\n`;\n\nexport const Dots = styled.p`\n  transform: translateY(-0.5rem);\n\n  span {\n    font-size: 3.6rem;\n    animation: pulse 850ms infinite backwards;\n    \n  }\n\n  span:nth-child(2) {\n    animation-delay: 150ms;\n  }\n\n  span:nth-child(3) {\n    animation-delay: 200ms;\n  }\n\n  @keyframes pulse {\n    0% {\n      opacity: .3;\n    }\n    20% {\n      opacity: 1;\n    }\n    100% {\n      opacity: .2;\n    }\n  }\n`;\n","import {\n  Dots,\n  LoaderMessage,\n  LoaderOverlay,\n} from './styled';\n\ntype LoaderProps = {\n  message: string\n}\n\nexport default function Loader({ message }: LoaderProps) {\n  return (\n    <LoaderOverlay>\n      <LoaderMessage>\n        {message}\n        &nbsp;\n        <Dots>\n          <span>.</span>\n          <span>.</span>\n          <span>.</span>\n        </Dots>\n      </LoaderMessage>\n    </LoaderOverlay>\n  );\n}\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 1rem;\n  margin: 1rem 2.2rem;\n  background-color: #F2F2F2;\n  border: 0.2rem solid #F2F2F2;\n  border-radius: 0.2rem;\n  font-size: 1.5rem;\n  cursor: pointer;\n`;\n\nexport const LoginLabel = styled.p`\n  font-size: 1.5rem;\n  letter-spacing: 0.03rem;\n`;\n\nexport const ArrowIcon = styled.i`\n  position: relative;\n  display: block;\n  transform: ${(props) => (\n    props.dir === 'up'\n      ? 'translate(-0.5rem, 0.2rem) rotate(180deg)'\n      : 'translate(-2rem, -0.2rem) rotate(0)'\n  )};\n  transition: transform 200ms;\n\n  &::before, &::after {\n    position: absolute;\n    display: block;\n    content:\"\";\n    border: 0.8rem solid transparent;\n  }\n  \n  &::before {\n    top:0;\n    border-top-color: black;\n  }\n\n  &::after {\n    top:-0.3rem;\n    border-top-color: #F2F2F2;\n  }\n`;\n","/* eslint-disable jsx-a11y/no-static-element-interactions */\n/* eslint-disable jsx-a11y/click-events-have-key-events */\nimport { useState } from 'react';\n\nimport { getUserRepos } from 'features/usersSearch/usersSearchSlice';\nimport RepoItem from 'features/usersSearch/components/RepoItem/RepoItem';\nimport Loader from 'common/components/Loader/Loader';\n\nimport { useAppDispatch } from 'app/hooks';\nimport { IUser } from 'models/user';\n\nimport {\n  ArrowIcon,\n  LoginLabel,\n  Wrapper,\n} from './styled';\n\ninterface IUserItemProps {\n  content: IUser\n}\n\nexport default function UserItem({ content }: IUserItemProps) {\n  const [showRepos, setShowRepos] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const dispatch = useAppDispatch();\n\n  const {\n    login,\n    repos,\n  } = content;\n\n  const handleUserItemClick = () => {\n    if (!repos && !showRepos) {\n      dispatch(getUserRepos(login));\n      setIsLoading(true);\n    }\n    setShowRepos(!showRepos);\n    setIsLoading(false);\n  };\n\n  return (\n    <>\n      <Wrapper onClick={handleUserItemClick}>\n        <LoginLabel>{login}</LoginLabel>\n        <ArrowIcon dir={showRepos ? 'up' : 'down'} />\n      </Wrapper>\n      {!repos && showRepos && <Loader message=\"Loading repos\" />}\n      {!isLoading && showRepos && repos && (\n        <>\n          {repos?.map((repo) => (\n            <RepoItem key={repo.id} content={repo} />\n          ))}\n        </>\n      )}\n    </>\n  );\n}\n","import styled from 'styled-components';\n\nimport { mediaQueries } from 'styles/mediaQueries';\n\nexport const Wrapper = styled.div`\n  min-block-size: 100vh;\n  background-color: #fff;\n\n  ${mediaQueries('sm')`background-color: aqua;`};\n  ${mediaQueries('md')`background-color: aquamarine;`};\n  ${mediaQueries('lg')`background-color: yellowgreen;`};\n  ${mediaQueries('xl')`background-color: violet;`};\n`;\nexport const ResultsLabel = styled.span`\n  padding: 0 2.2rem;\n  color: #606060;\n  font-size: 1.5rem;\n  letter-spacing: 0.03rem;\n`;\n","import { useState, useEffect } from 'react';\n\nimport { useAppSelector } from 'app/hooks';\nimport { IUser } from 'models/user';\n\nimport { selectUsersList, selectIsLoadingUsers, selectSearchParams } from 'features/usersSearch/usersSearchSlice';\nimport UsersSearchForm from 'features/usersSearch/components/UsersSearchForm/UsersSearchForm';\nimport UserItem from 'features/usersSearch/components/UserItem/UserItem';\nimport Loader from 'common/components/Loader/Loader';\n\nimport { ResultsLabel, Wrapper } from './styled';\n\nexport default function UsersSearch() {\n  const usersList = useAppSelector(selectUsersList);\n  const isLoading = useAppSelector(selectIsLoadingUsers);\n  const searchParams = useAppSelector(selectSearchParams);\n  const [login, setLogin] = useState('');\n\n  useEffect(() => {\n    setLogin(searchParams.login);\n  }, [usersList]);\n\n  return (\n    <Wrapper>\n      {isLoading && <Loader message=\"Loading users\" />}\n      <UsersSearchForm />\n      {!!usersList.length && (\n        <ResultsLabel>\n          Showing users for\n          &quot;\n          {login}\n          &quot;\n        </ResultsLabel>\n      )}\n      {usersList.map((user: IUser) => (\n        <UserItem key={user.id} content={user} />\n      ))}\n    </Wrapper>\n  );\n}\n","import UsersSearch from 'features/usersSearch/components/UsersSearch/UsersSearch';\n\nimport { Helmet } from 'react-helmet';\n\nfunction App() {\n  return (\n    <>\n      <Helmet>\n        <meta charSet=\"utf-8\" />\n        <title>github-search-tool-rest</title>\n        {/* <link rel=\"canonical\" href=\"http://mysite.com/example\" /> */}\n      </Helmet>\n      <UsersSearch />\n    </>\n\n  );\n}\n\nexport default App;\n","/* eslint-disable */\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost'\n    // [::1] is the IPv6 localhost address.\n    || window.location.hostname === '[::1]'\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    || window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service '\n              + 'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all '\n                  + 'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404\n        || (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { store } from 'app/store';\nimport { Provider } from 'react-redux';\nimport GlobalStyle from 'styles/global';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <GlobalStyle />\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}